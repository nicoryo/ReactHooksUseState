{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/t_ryoga/React_app/app03/usestate-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst Counter = () => {\n  _s();\n\n  // countの初期値として、1~10までのランダムな数値を生成\n  const intialState = Math.floor(Math.random() * 10) + 1; // count という名前の state 変数を宣言、初期値 intialState をセット\n\n  const [count, setCount] = useState(intialState); // open という名前の state 変数を宣言、初期値 true をセット\n\n  const [open, setOpen] = useState(true); // toggleの関数を宣言\n\n  const toggle = () => setOpen(!open);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: open ? 'close' : 'open'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: open ? 'isOpen' : 'isClose',\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u73FE\\u5728\\u306E\\u6570\\u5B57\\u306F\", count, \"\\u3067\\u3059\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(prevState => prevState + 1),\n        children: \"+ 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count - 1),\n        children: \"- 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(0),\n        children: \"\\uFF10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(intialState),\n        children: \"\\u6700\\u521D\\u306E\\u6570\\u5024\\u306B\\u623B\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Counter, \"QWEjD80603ICiZ5Vzd+rqorr8Hg=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/t_ryoga/React_app/app03/usestate-app/src/App.js"],"names":["React","useState","Counter","intialState","Math","floor","random","count","setCount","open","setOpen","toggle","prevState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAArD,CAFoB,CAGpB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,WAAD,CAAlC,CAJoB,CAKpB;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC,CANoB,CAOpB;;AACA,QAAMU,MAAM,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA5B;;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEE,MAAjB;AAAA,gBAA0BF,IAAI,GAAG,OAAH,GAAa;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEA,IAAI,GAAG,QAAH,GAAc,SAAlC;AAAA,8BACE;AAAA,2DAAUF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACI,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAACL,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD,CAzBD;;GAAMD,O;;KAAAA,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\n\nconst Counter = () => {\n  // countの初期値として、1~10までのランダムな数値を生成\n  const intialState = Math.floor(Math.random() * 10) + 1\n  // count という名前の state 変数を宣言、初期値 intialState をセット\n  const [count, setCount] = useState(intialState)\n  // open という名前の state 変数を宣言、初期値 true をセット\n  const [open, setOpen] = useState(true)\n  // toggleの関数を宣言\n  const toggle = () => setOpen(!open)\n\n  return (\n    <>\n      <button onClick={toggle}>{open ? 'close' : 'open'}</button>\n      <div className={open ? 'isOpen' : 'isClose'}>\n        <p>現在の数字は{count}です</p>\n        {/* setCount()は、countを更新するための関数。countを引数で受け取ることも出来る */}\n        <button onClick={() => setCount(prevState => prevState + 1)}>\n          + 1\n        </button>\n        <button onClick={() => setCount(count - 1)}>- 1</button>\n        <button onClick={() => setCount(0)}>０</button>\n        <button onClick={() => setCount(intialState)}>最初の数値に戻す</button>\n      </div>\n    </>\n  )\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}